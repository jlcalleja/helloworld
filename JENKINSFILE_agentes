pipeline {
    agent none
    environment {
        pathpython = "C:\\Users\\ADM-1\\AppData\\Local\\Programs\\Python\\Python313"
        pathscript = "C:\\Users\\ADM-1\\AppData\\Local\\Programs\\Python\\Python313\\Scripts"
        pathwiremock = "C:\\Users\\ADM-1\\Downloads\\wiremock-standalone-3.10.0.jar"
        informacion = '''
                      echo USUARIO ACTUAL: %USERNAME%
                      echo HOST: %COMPUTERNAME%
                      echo ESPACIO DE TRABAJO: %WORKSPACE%
        '''
    }

    stages {
        stage('GetCode') {
            agent { label 'agente1' }
            steps {
               git url: 'https://github.com/jlcalleja/helloworld', branch: 'feature_fix_racecond'
                bat "${informacion}"
                stash includes: '**/*', name: 'codigo'
            }
        }
        
        stage('Build') {
            agent { label 'agente1' }
            steps {
                echo 'NO HAY QUE COMPILAR NADA, ESTO ES PYTHON'
                bat "dir"
                bat "${informacion}"
            }
        }
        stage('Builddos') {
            agent { label 'agente1' }
            steps {
                echo 'NO HAY QUE COMPILAR NADA, ESTO ES PYTHON'
                bat "dir"
                bat "${informacion}"
            }
        }

        stage('Tests') {
            parallel {
                stage('Unit') {
                    agent { label 'agente2' }
                    steps {
                        unstash 'codigo'
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE'){
                            bat '''
                                set PYTHONPATH=%WORKSPACE%
                                %pathscript%\\pytest --junitxml=result-unit.xml test\\unit
                           '''
                            bat "${informacion}"
                            stash includes: '**/*', name: 'unitResults'
                        }
                    }
                }
                
                stage('Service') {
                    agent { label 'agente3' }
                    steps {
                        unstash 'codigo'
                        catchError(buildResult: 'UNSTABLE', stageResult: 'FAILURE'){
                            bat '''
                                set FLASK_APP=app\\api.py
                                start %pathscript%\\flask run
                                start java -jar %pathwiremock% --port 9090 --root-dir %WORKSPACE%\\test\\wiremock

                                sleep(time: 60, unit: 'SECONDS')

                                set PYTHONPATH=%WORKSPACE%
                                %pathscript%\\pytest --junitxml=result-rest.xml test\\rest
                           '''
                            bat "${informacion}"
                            stash includes: '**/*', name: 'serviceResults'
                        }
                    }
                }
            }
        }
        
        stage('Results') {
            agent { label 'agente1' }
            steps {
                unstash 'unitResults'
                unstash 'serviceResults'
                junit 'result*.xml'
                bat "${informacion}"
            }
        }
    }

    post {
        always {
            node('agente1') {
                cleanWs()  // Limpiar el workspace de 'agente1'
            }
            node('agente2') {
                cleanWs()  // Limpiar el workspace de 'agente2'
            }
            node('agente3') {
                cleanWs()  // Limpiar el workspace de 'agente3'
            }
        }
    }
}
